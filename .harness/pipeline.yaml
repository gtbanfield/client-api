pipeline:
  name: client-api
  identifier: clientapi
  projectIdentifier: IDA
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: account.Github
        repoName: client-api
        build: <+input>
  stages:
    - stage:
        name: CI
        identifier: CI
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          infrastructure:
            type: KubernetesDirect
            spec:
              connectorRef: account.k8s
              namespace: api
              automountServiceAccountToken: true
              nodeSelector: {}
              os: Linux
          execution:
            steps:
              - step:
                  name: Git-Clone
                  identifier: GitClone
                  template:
                    templateRef: Git
                    versionLabel: v0.1.0
              - step:
                  type: Run
                  name: Mvn
                  identifier: Run_1
                  spec:
                    connectorRef: account.harnessImage
                    image: maven:3.9.9-amazoncorretto-17-al2023
                    shell: Sh
                    command: |-
                      java --version
                      mvn clean install -DskipTests
              - step:
                  type: Plugin
                  name: Nexus
                  identifier: Nexus
                  spec:
                    connectorRef: account.harnessImage
                    image: harnesscommunity/publish-nexus-repository:1.1.1
                    settings:
                      username: admin
                      password: <+secrets.getValue("nexus_password")>
                      server_url: https://192.168.1.83:5000
              - step:
                  name: docker
                  identifier: docker
                  template:
                    templateRef: Docker
                    versionLabel: v0.1.0
                    gitBranch: main
                    templateInputs:
                      type: BuildAndPushDockerRegistry
                      spec:
                        tags: <+input>
                        dockerfile: <+input>
    - stage:
        name: K8sRollOut
        identifier: K8sRollOut
        tags: {}
        template:
          templateRef: K8sRollOut
          versionLabel: v0.1.0
